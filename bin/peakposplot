#! /usr/bin/env casarun
#! /usr/bin/env python
#
#    example to present the peak positions of each channel in a cube
#    in a plot that scales the intensity at each peak with a circle
#    Right now depends on either cubestats (so the .bin is created)
#    or a new cubestats_nemo, so the new ccdstat has written the
#    new column 
#
import numpy as np
import matplotlib.pyplot as plt

try:
    from astropy.table import Table
except:
    print 'No astropy'


try:
    import admit1 as admit
    import atable
except:
    print 'No admit'

#
gamma = 0.75
rmax  = 5

Qbin = True

if Qbin:
    print "Using peakpospoint.bin"
    # from peakpospoint.bin
    # ['channel', 'frequency', 'maxposx', 'maxposy', 'max']
    t = atable.ATable().pload('peakpospoint.bin')
    print t.names
    i = t.get('max')
    c = t.get('channel')
    x = t.get('maxposx')
    y = t.get('maxposy')
else:
    print "Using ccdstat.tab"
    #  from maxpos=t
    t = Table.read('ccdstat.tab',format='ascii')
    if True:
        # if properly labeled
	i = t['max']
	c = t['iz']
	x = t['maxposx']
	y = t['maxposy']
    else:
        # only maxpos=t is allowed here
	i = t['col4']
	c = t['col1']
	x = t['col12'] 
	y = t['col13']

z1 = i/i.max()
z2 = np.sqrt(z1)
z3 = np.sqrt(z2)
z4 = z1**gamma

a1 = np.pi * (z1*rmax)**2 
a2 = np.pi * (z2*rmax)**2 
a3 = np.pi * (z3*rmax)**2 
a4 = np.pi * (z4*rmax)**2
print 'A4 range:',a4.min(),a4.max()

fig = plt.figure()

ax1 = fig.add_subplot(2,2,1)
ax1.scatter(x, y, s=a1, alpha=0.5)
ax1.set_title('PeakPosPlot  k=1 rmax=%g' % rmax)

ax2 = fig.add_subplot(2,2,2)
ax2.scatter(x, y, s=a2, alpha=0.5)
ax2.set_title('k=1/2')

ax3 = fig.add_subplot(2,2,3)
ax3.scatter(x, y, s=a3, alpha=0.5)
ax3.set_title('k=1/3')

ax4 = fig.add_subplot(2,2,4)
ax4.scatter(x, y, s=a4, alpha=0.5)
ax4.set_title('k=%g' % gamma)




plt.show()
fig.savefig('PeakPosPlot.pdf')



