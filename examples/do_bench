#! /bin/csh -f
#

set fits=$1
set dir=$2

if ($#argv != 2) then
  echo usage: $0 fits-file working-directory
  exit 1
endif

# here are the commands if the benchmark cube don't exist
if (0) then
  set cube=1024,1024,1024
  set slab=4096,4096,64 
  set stick=128,128,65536 

  if ($?NEMO) then
    set pars_ccdgen=(object=noise spar=1 seed=123)
    set pars_ccdfits=(radecvel=true)

    time ccdgen out=bench-cube.ccd size=$cube   $pars_ccdgen
    time ccdgen out=bench-slab.ccd size=$slab   $pars_ccdgen
    time ccdgen out=bench-stick.ccd size=$stick $pars_ccdgen 

    time ccdfits bench-cube.ccd bench-cube.fits   $pars_ccdfits
    time ccdfits bench-stick.ccd bench-stick.fits $pars_ccdfits
    time ccdfits bench-slab.ccd bench-slab.fits   $pars_ccdfits
  endif

  if ($?MIR) then
    set pars_imgen=(object=noise spar=1)
    set pars_fits=(op=xyout)

    time imgen out=bench-cube.mir imsize=$cube  $pars_imgen
    time imgen out=bench-slab.mir imsize=$slab  $pars_imgen
    time imgen out=bench-stick.mir imsize=$stick $pars_imgen

    time fits in=bench-cube.mir  out=bench-cube.fits  $pars_fits
    time fits in=bench-slab.mir  out=bench-slab.fits  $pars_fits
    time fits in=bench-stick.mir out=bench-stick.fits $pars_fits
  endif
endif

mkdir -p $dir
cd $dir

if ($?NEMO) then
  echo NEMO=$NEMO
  rm -rf n.*
  echo FITSCCD:
  time fitsccd in=../$fits out=.
  time fitsccd in=../$fits out=.
  time fitsccd in=../$fits out=.
  time fitsccd in=../$fits out=n.1
  time fitsccd in=../$fits out=n.2
  time fitsccd in=../$fits out=n.3
  echo CCDSTAT
  time ccdstat n.1
  time ccdstat n.1
  time ccdstat n.1
  echo CCDMATH
  time ccdmath n.1,n.1 .  %1+%2
  time ccdmath n.1,n.1 .  %1+%2
  time ccdmath n.1,n.1 .  %1+%2
  time ccdmath n.1,n.1 n.1a  %1+%2
  time ccdmath n.1,n.1 n.1b  %1+%2
  time ccdmath n.1,n.1 n.1c  %1+%2
  echo CCDSMOOTH X
  time ccdsmooth n.1 dir=x out=.
  time ccdsmooth n.1 dir=x out=.
  time ccdsmooth n.1 dir=x out=.
  time ccdsmooth n.1 dir=x out=n.1x1
  time ccdsmooth n.1 dir=x out=n.1x2
  time ccdsmooth n.1 dir=x out=n.1x3
  echo CCDSMOOTH Y
  time ccdsmooth n.1 dir=y out=.
  time ccdsmooth n.1 dir=y out=.
  time ccdsmooth n.1 dir=y out=.
  time ccdsmooth n.1 dir=y out=n.1y1
  time ccdsmooth n.1 dir=y out=n.1y2
  time ccdsmooth n.1 dir=y out=n.1y3
  echo CCDSMOOTH Z
  time ccdsmooth n.1 dir=z out=.
  time ccdsmooth n.1 dir=z out=.
  time ccdsmooth n.1 dir=z out=.
  time ccdsmooth n.1 dir=z out=n.1z1
  time ccdsmooth n.1 dir=z out=n.1z2
  time ccdsmooth n.1 dir=z out=n.1z3

endif


if ($?MIR) then
  echo MIR=$MIR
  rm -rf m.*
  echo FITS
  time fits op=xyin in=../$fits out=m.1
  time fits op=xyin in=../$fits out=m.2
  time fits op=xyin in=../$fits out=m.3
  echo HISTO
  time histo in=m.1 > /dev/null
  time histo in=m.1 > /dev/null
  time histo in=m.1 > /dev/null
  echo MATHS
  time maths exp='<m.1>+<m.1>' out=m.1a
  time maths exp='<m.1>+<m.1>' out=m.1b
  time maths exp='<m.1>+<m.1>' out=m.1c
  echo HANNING
  time hanning in=m.1 out=m.1h1
  time hanning in=m.1 out=m.1h2
  time hanning in=m.1 out=m.1h3
endif

if (0) then
  echo IMBENCH
  rm -rf i.*
  time imbench in=../$fits mode=0 out=i.0 
  time imbench in=../$fits mode=1
  time imbench in=../$fits mode=6 out=i.6
  time imbench in=../$fits mode=2 out=i.2
  time imbench in=../$fits mode=3 out=i.3
  time imbench in=../$fits mode=4 out=i.4
endif
